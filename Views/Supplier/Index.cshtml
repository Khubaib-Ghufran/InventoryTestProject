@using CodesByAniz.Tools;
@model IEnumerable<InventoryBeginners.Models.Supplier>
@{
    ViewData["Title"] = "Index";
    SortModel sortModel = (SortModel)ViewData["sortModel"];
    PagerModel pager = ViewBag.Pager;
}
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css">
<div class="container-fluid btn-group">
    <div class="col-10">
        <h3>Fiducial</h3>
    </div>
    <div class="col-2 justify-content-end">
        <p>
            <a asp-action="Create" class="btn btn-success">Create New</a>
        </p>
    </div>
</div>
<br />
<div class="row">
    <div class="col-12">
        <partial name="_topBar" model="@pager" />
    </div>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                <i class="@sortModel.GetColumn("Code").SortIcon" arial-hidden="true"></i>
                <a asp-action="Index" asp-route-sortExpression="@sortModel.GetColumn("Code").SortExpression">
                    @Html.DisplayNameFor(model => model.Code)
                </a>
            </th>
            <th>
                <i class="@sortModel.GetColumn("name").SortIcon" arial-hidden="true"></i>
                <a asp-action="Index" asp-route-sortExpression="@sortModel.GetColumn("name").SortExpression">
                    @Html.DisplayNameFor(model => model.Name)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Job)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Department)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.EmailId)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.PhoneNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var model in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => model.Code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => model.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => model.FName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => model.Job)
            </td>
            <td>
                @Html.DisplayFor(modelItem => model.Department)
            </td>
            <td>
                @Html.DisplayFor(modelItem => model.EmailId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => model.PhoneNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => model.Address)
            </td>
            <td>
                <div class="btn-group">
                    <a asp-action="Edit" asp-route-id="model.Id">
                        <span class="btn btn-sm btn-outline-primary">
                            <i class="fa fa-edit" aria-hidden="true"></i>
                        </span>
                    </a>
                    <a asp-action="Details" asp-route-id="model.Id">
                        <span class="btn btn-sm btn-outline-dark">
                            <i class="fa fa-eye" aria-hidden="true"></i>
                        </span>
                    </a>
                    <a asp-action="Delete" asp-route-id="model.Id">
                        <span class="btn btn-sm btn-outline-danger">
                            <i class="fa fa-trash" aria-hidden="true"></i>
                        </span>
                    </a>
                </div>
            </td>
        </tr>
        }
    </tbody>
</table>
<div class="row">
    <div class="col-12">
        <partial name="_bottomBar" model="@pager" />
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

}


